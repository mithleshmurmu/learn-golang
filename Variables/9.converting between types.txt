Converting between data types :-

Type Casting :-
-> The process of converting one data type to another is known as Type Casting.
-> Data types can be converted to other data types, but this does not guarantee that the value will remain intact. 

-----------------------------------------
integer to float :-

package main
import "fmt"

func main() {
	var i int = 90
	var f float64 = float64(i)
	fmt.Printf("%.2f\n",f)
}

>>> go run main.go
    90.00

------------------------------

float to integer :-

package main
import "fmt"

func main() {
	var f floar64 = 45.89
	var i int = int(f)
	fmt.Printf("%v\n",i)
}

>>> go run main.go
    45

-------------------------------------------
strconv package :- [int to str and vice-versa]

Itoa()	- converts integer to string
	- returns one value - string formed with the given integer.


package main
import ("fmt""strconv")

func main() {
	var i int = 42
	var s string = strconv.Itoa(i)	// convert int to string
	fmt.Printf("%q", s)
}


>>> go run main.go
    "42"


-- -- -- -- -- -- -- -- -- 
Atoi()	- converts string to integer
	- returns two values - the corresponding integer, error (if any).

[ string to integer ]

package main
import ("fmt""strconv")

func main() {
	var s string = "200"
	i, err := strconv.Atoi(s)
	fmt.Printf("%v, %T \n", i, i)
	fmt.Printf("%v, %T",err, err)
}

>>> go run main.go
    200, int
    <nil>, <int>



package main
import ("fmt""strconv")

func main() {
	var s string = "200abc"
	i, err := strconv.Atoi(s)
	fmt.Printf("%v, %T \n", i, i)
	fmt.Printf("%v, %T", err, err)
}

>>> go run main.go
    0, int
    strconv.Atoi: parsing "200a: invalid syntax, *strconv.NumError

